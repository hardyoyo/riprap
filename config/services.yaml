# Symfony 4 services.yaml file for Riprap.

# Riprap-specific parameters start here.
parameters:
    app.fixity.method: 'HEAD'
    app.fixity.algorithm: 'SHA-1'
    app.fixity.eventtype.uri: 'http://id.loc.gov/vocabulary/preservation/eventType/fix'
    app.fixity.eventtype.code: 'fix'

    # To not register any fetchresourcelist plugins, use app.plugins.fetchresourcelist []
    app.plugins.fetchresourcelist: ['app:riprap:plugin:fetchresourcelist:from:file']
    app.plugins.fetchresourcelist.from.file.paths: ['resources/riprap_resource_ids.txt']

    # To not register any fetchdigest plugins, use app.plugins.fetchdigest [].
    # Currently we only allow one fetchdigest plugin per fixity event (i.e., this
    # value is not an array).
    app.plugins.fetchdigest: 'app:riprap:plugin:fetchdigest:from:fedoraapi'

    # To not register any persist plugins, use app.plugins.persist []
    app.plugins.persist: ['app:riprap:plugin:persist:to:database']
  
    # To not register any postcheck plugins, use app.plugins.postcheck []
    app.plugins.postcheck: ['app:riprap:plugin:postcheck:mailfailures', 'app:riprap:plugin:postcheck:migratefedora3auditlog']
    app.plugins.postcheck.mailfailures.from: 'from@example.com'
    app.plugins.postcheck.mailfailures.to: 'to@example.com'

    # Set to 'disabled' in production.
    app.mockrepository: 'enabled'

    ### Sample plugins
    # app.plugins.fetchresourcelist: ['app:riprap:plugin:fetchresourcelist:from:glob']
    # app.plugins.fetchresourcelist.from.glob.file_directory: 'resources/filesystemexample/resourcefiles'
    # app.plugins.fetchdigest: 'app:riprap:plugin:fetchdigest:from:shell'
    # app.plugins.fetchdigrest.from.shell.command: '/usr/bin/sha1sum'
    # app.plugins.persist: ['app:riprap:plugin:persist:to:csv']
    # app.plugins.postcheck: []


### Do not modify any of the values below this line.
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']
